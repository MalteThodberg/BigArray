% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BigMatrix-class.R, R/BigRealizationSink-class.R
\docType{class}
\name{BigArray-class}
\alias{BigArray-class}
\alias{BigMatrix-class}
\alias{BigArray}
\alias{writeBigArray}
\title{BigArray: A DelayedArray backend for bigmemory}
\usage{
BigArray(filepath)

writeBigArray(x, filepath = tempfile())
}
\arguments{
\item{filepath}{character: Path to the basename of a BigMatrix}

\item{x}{matrix, DelayedArray, etc.: matrix-like object to be written
block-by-block to disk.}
}
\value{
A BigMatrix object (A 2D BigArray)
}
\description{
BigArray allows you to use the bigmemory package as a backend for
DelayedArrays, similarly to the default HDF5Array package.
}
\details{
Details on BigArraySeed, BigArray, BigMatrix, FileRealizationSink,
  read-only / open connections, to be added later...
}
\examples{
#### Examples ####

mat <- as.matrix(iris[,-5])

# Coerce a matrix to a BigArray using a temporary BigMatrix backing file:
as(mat, "BigArray")

# Use writeBigArray to specify the location of the backing file:
my_backing_file <- tempfile(pattern="BigMatrix")
writeBigArray(mat, filepath=tempfile())

# Create a BigArray directly from a BigMatrix backing file
manual_backing_file <- tempfile(pattern="BigMatrix")
bm <- bigmemory::filebacked.big.matrix(
    nrow = 100,
    ncol = 25,
    type = "double",
    backingfile = paste0(basename(manual_backing_file), ".bmat"),
    backingpath = dirname(manual_backing_file),
    descriptorfile = paste0(basename(manual_backing_file), ".desc.txt"))
BigArray(manual_backing_file)

# BigArray supports all DelayedArray operations. See vignette for examples.

#### Sanity checks ####

# Check that matrix can be converted to/from
dbl_mat <- replicate(n = 25, rnorm(1000))
int_mat <- round(dbl_mat * 100)

dbl_fa <- as(dbl_mat, "BigArray")
int_fa <- as(int_mat, "BigArray")

stopifnot(as.matrix(dbl_fa) == dbl_mat,
          as.matrix(int_fa) == int_mat)
}
